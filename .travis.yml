sudo: required
dist: trusty
language: go java
env:
  - GIMME_OS=linux GIMME_ARCH=amd64 KERNEL=4.1.17
go:
  - 1.6
jdk:
  - oraclejdk8
before_install:
  # Install the arm32 cross-compiler
  - sudo apt-add-repository 'deb http://archive.ubuntu.com/ubuntu vivid main'
  - sudo apt-get update -qq
  - sudo apt-get install -qq -y gcc-arm-linux-gnueabihf
  - arm-linux-gnueabihf-gcc --version
  # Install golang
  - gimme 1.6
  # Correct rake bug
  - RAKE=`which rake`
  - mv `which rake` `which rake`.old
  - touch ${RAKE}
  - chmod 755 ${RAKE}
install:
  - echo $TRAVIS_BUILD_DIR
  # wiringPI
  - git clone git://git.drogon.net/wiringPi
  - cd $TRAVIS_BUILD_DIR/wiringPi/wiringPi
  - sed 's!gcc!arm-linux-gnueabihf-gcc!g' Makefile > Makefile.tmp
  - mv -f Makefile.tmp Makefile
  - sed 's!PIC!PIC -mcpu=arm1176jzf-s -march=armv6zk -mfpu=vfp -mfloat-abi=hard!g' Makefile > Makefile.tmp
  - mv -f Makefile.tmp Makefile
  - make all
  - readelf libwiringPi.so
  - find *
  # Go
  - source /home/travis/.gimme/envs/go1.6.env
  - which go
  - go version
  - cd $TRAVIS_BUILD_DIR
  - GOPATH=$TRAVIS_BUILD_DIR/import go get -u $(go list -f '{{join .Imports "\n"}}' ./... | sort | uniq | grep -v "org/jarvis" | grep -v "C")
  - cd $TRAVIS_BUILD_DIR/jarvis-go-core
  - ls -lrt ${TRAVIS_BUILD_DIR}/wiringPi/wiringPi/*.so.*
  - nm ${TRAVIS_BUILD_DIR}/wiringPi/wiringPi/*.so.*
  - sudo cp ${TRAVIS_BUILD_DIR}/wiringPi/wiringPi/*.so.* /usr/lib/libwiringPi.so
  - file /usr/lib/libwiringPi.so
  - GOPATH=$TRAVIS_BUILD_DIR/import:$PWD CC=arm-linux-gnueabihf-gcc GOOS=linux GOARCH=arm GOARM=6 CGO_ENABLED=1 CFLAGS="-march=armv6j" LDFLAGS="-march=armv6j -L${TRAVIS_BUILD_DIR}/wiringPi/wiringPi -lwiringPi" go install -installsuffix armv6j ./...
  - find bin
  - ls -lrt bin/linux_arm/main
  - mv bin/linux_arm/main jarvis-rest-module-0.0.1-SNAPSHOT.arm6j
  - file jarvis-rest-module-0.0.1-SNAPSHOT.arm6j
  - GOPATH=$TRAVIS_BUILD_DIR/import:$PWD CC=arm-linux-gnueabihf-gcc GOOS=linux GOARCH=arm GOARM=7 CGO_ENABLED=1 CFLAGS="-march=armv7" LDFLAGS="-march=armv7 -L${TRAVIS_BUILD_DIR}/wiringPi/wiringPi -lwiringPi" go install -installsuffix armv7 ./...
  - find bin
  - ls -lrt bin/linux_arm/main
  - mv bin/linux_arm/main jarvis-rest-module-0.0.1-SNAPSHOT.arm
  - file jarvis-rest-module-0.0.1-SNAPSHOT.arm
  # Java
  - cd $TRAVIS_BUILD_DIR/jarvis-core
  - java -version
  - echo mvn -q install
deploy:
  provider: releases
  overwrite: true
  api_key: "$GITHUB_OAUTH2_KEY"
  file:
  - "${TRAVIS_BUILD_DIR}/jarvis-go-core/jarvis-rest-module-0.0.1-SNAPSHOT.arm"
  - "${TRAVIS_BUILD_DIR}/jarvis-go-core/jarvis-rest-module-0.0.1-SNAPSHOT.arm6j"
  - "${TRAVIS_BUILD_DIR}/jarvis-go-core/module.properties"
  #- "${TRAVIS_BUILD_DIR}/jarvis-core/jarvis-core-server/src/test/resources/sample.json"
  #- "${TRAVIS_BUILD_DIR}/jarvis-core/jarvis-core-server/target/jarvis-core-server-0.0.1-SNAPSHOT.jar"
  #- "${TRAVIS_BUILD_DIR}/jarvis-core/jarvis-rest-module-dio/target/jarvis-rest-module-dio-0.0.1-SNAPSHOT.jar"
  #- "${TRAVIS_BUILD_DIR}/jarvis-core/jarvis-rest-module-voice/target/jarvis-rest-module-voice-0.0.1-SNAPSHOT.jar"
  #- "${TRAVIS_BUILD_DIR}/jarvis-core/jarvis-rest-module-exec/target/jarvis-rest-module-exec-0.0.1-SNAPSHOT.jar"
  #- "${TRAVIS_BUILD_DIR}/jarvis-core/jarvis-rest-module-aiml/target/jarvis-rest-module-aiml-0.0.1-SNAPSHOT.jar"
  skip_cleanup: true
  on:
    tags: false
    all_branches: true
after_deploy: echo "deploiement termin√©"
